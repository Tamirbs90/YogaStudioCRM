{"version":3,"sources":["./src/app/Models/LoginDto.ts","./src/app/login/account-routing.module.ts","./src/app/login/account.module.ts","./src/app/login/account/account.component.ts","./src/app/login/account/account.component.html","./src/app/login/login/login.component.ts","./src/app/login/login/login.component.html","./src/app/login/register/register.component.ts","./src/app/login/register/register.component.html"],"names":[],"mappings":"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","file":"login-account-module.js","sourcesContent":["export class LoginDto{\r\n  username: string;\r\n  password:string;\r\n}","import { AccountComponent } from './account/account.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nconst routes:Routes=[\n    {path:'login', component : LoginComponent},\n    {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountComponent } from './account/account.component';\nimport { LoginComponent } from './login/login.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { LoginService } from './login.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [AccountComponent,LoginComponent,RegisterComponent],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule\n  ]\n})\nexport class AccountModule { }\n","import { Observable } from 'rxjs';\nimport { LoginService } from '../login.service';\nimport { Component, OnInit } from '@angular/core';\nimport { LoginDto } from 'src/app/Models/LoginDto';\nimport { RegisterDto } from 'src/app/Models/RegisterDto';\nimport { LoginSuccessModel } from 'src/app/Models/LoginSuccessModel';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  loginSuccesModel$= new Observable<LoginSuccessModel>();\n\n  constructor(private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.loginSuccesModel$= this.loginService.loginSuceess$;\n  }\n\n  login(loginInfo: LoginDto){\n    this.loginService.login(loginInfo).subscribe();\n  }\n\n  logout(){\n    this.loginService.logout();\n  }\n\n  register(registerInfo: RegisterDto){\n    this.loginService.register(registerInfo).subscribe();\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"accountWindow\">\n        <div class=\"select\">\n          <ul>\n              <li><a routerLink=\"/account/login\">Login</a></li>\n              <li><a routerLink='/account/register'>Register</a></li>\n          </ul>\n          <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { Output } from '@angular/core';\nimport { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginDto } from 'src/app/Models/LoginDto';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  loginInfo= new LoginDto();\n  errorMessage:string='';\n\n  constructor(private loginService : LoginService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.getCurrentUser();\n  }\n\n  login(){\n    this.loginService.login(this.loginInfo).\n    subscribe((res)=>{\n      this.router.navigateByUrl('/students');\n      this.errorMessage='';\n    }\n    ,err=>this.errorMessage=err.error);\n  }\n\n  getCurrentUser(){\n    const token= localStorage.getItem('token');\n    if(token){\n      this.loginService.getCurrentUser(token).subscribe((res)=>{\n        this.router.navigateByUrl('/students');\n      })\n    }\n  \n  }\n\n}\n","<div class=\"container\">\n    <div class=\"loginContainer\">\n        <div  class=\"welcome\"><span>Welcome</span></div>\n    <div class=\"loginForm\">\n        <div class=\"control\" >\n            <input  class='form-control' type=\"text\" placeholder=\"Username\" [(ngModel)]=\"loginInfo.username\">\n        </div>\n        <div style=\"margin-top: 12px;\" class=\"control\">\n            <input class=\"form-control\" type=\"password\" placeholder=\"Passowrd\" [(ngModel)]=\"loginInfo.password\">\n        </div>\n        <div style=\"margin-top: 12px;\" class=\"error\" *ngIf='errorMessage.length>0'>{{errorMessage}}</div>\n    \n        <button style=\"margin-top: 24px; width: 100%;\" (click)='login()' [disabled]='loginInfo?.username?.length==0 || loginInfo?.password?.length==0'>Sign In</button>\n    \n    </div>\n    </div>\n</div>\n\n","import { RegisterDto } from 'src/app/Models/RegisterDto';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoginSuccessModel } from 'src/app/Models/LoginSuccessModel';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './../login.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  loggedInUser$= new Observable<LoginSuccessModel>();\n  userExists:string='';\n  registerForm= new FormGroup({\n    userName: new FormControl('',Validators.required),\n    password: new FormControl('', [Validators.required,Validators.minLength(8)]),\n    email: new FormControl('',[Validators.required, Validators.email]),\n    firstName: new FormControl('', [Validators.required]),\n    lastName: new FormControl('',Validators.required)\n  });\n\n  constructor(private loginService: LoginService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.loggedInUser$= this.loginService.loginSuceess$;\n  }\n\n  register(){\n    this.loginService.register(this.registerForm.value as RegisterDto).subscribe(res=>{\n    this.router.navigateByUrl('/account/login');\n    this.registerForm.reset();\n  },\n    err=>{\n      this.userExists=err.error;\n      setTimeout(() => {this.userExists=''},3000);\n    })\n  }\n\n  wrongInput(){\n    return !this.registerForm.valid;\n  }\n\n  get userName(){return this.registerForm.get('userName')};\n  get password(){return this.registerForm.get('password') }\n  get email(){return this.registerForm.get('email') }\n  get firstName(){return this.registerForm.get('firstName') }\n  get lastName(){return this.registerForm.get('lastName') }\n\n\n\n\n}\n","<form class='register' [formGroup]='registerForm' (ngSubmit)='register()'>\n    <div class=\"control\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id='username' class=\"form-control\" formControlName='userName'>\n    </div>\n    <div class=\"error\" *ngIf= 'userName.invalid && (userName.dirty && userName.touched)'>\n        Please Enter Username\n    </div>\n    <div class=\"error\" *ngIf='userExists.length>0'>\n        Username already exists\n    </div>\n\n    <div class=\"control\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id='password' class=\"form-control\" formControlName='password'>\n    </div>\n    <div class=\"error\" *ngIf= 'password.invalid && (password.dirty && password.touched)'>\n        <div class=\"required\" *ngIf='password.errors.required'>\n            Please Enter Password\n        </div>\n        <div class=\"length\" *ngIf='password.errors.minlength'>\n            Password length must be at least 8 letters\n        </div>\n    </div>\n    <div class=\"control\">\n        <label for=\"emailtext\">Email:</label>\n        <input type=\"email\" id='emailtext' class=\"form-control\" formControlName='email'>\n    </div>\n    <div class=\"error\" *ngIf= 'email.invalid && (email.dirty && email.touched)'>\n        Please enter Email\n    </div>\n    <div class=\"control\">\n        <label for=\"firstName\">First Name:</label>\n        <input type=\"text\" id='firstName' class=\"form-control\" formControlName='firstName'>\n    </div>\n    <div class=\"error\" *ngIf= 'firstName.invalid && (firstName.dirty && firstName.touched)'>\n        Please enter first name\n    </div>\n    <div class=\"control\">\n        <label for=\"lastName\">Last Name:</label>\n        <input type=\"text\" id='lastName' class=\"form-control\" formControlName='lastName'>\n    </div>\n    <div class=\"error\" *ngIf= 'lastName.invalid && (lastName.dirty && lastName.touched)'>\n        Please Enter last name\n    </div>\n    <button style=\"margin-top: 15px; width: 100%;\" [disabled]='wrongInput()'>Register</button>\n</form>\n"],"sourceRoot":"webpack:///"}